# pv run --config prompts/personalvibe/configs/5.1.2.yaml

# 1. Chunk 1 – lint baseline
# 2. Chunk 2 – project detection scaffolding
# 3. Chunk 3 – new commands + bug-fix
# 4. Chunk 4 – IO hardening
# 5. Chunk 5 – docs & release polish

project_name: "personalvibe"
mode: sprint
execution_details: |

  Perform work for Chunk 1

  Beware of the potential of creating errors like this

  (personalvibe-py3.12) bash-3.2$ pv parse-stage --project_name personalvibe --run
  Saved extracted code to: /Users/nicholasjenkins/Documents/personalvibe/prompts/personalvibe/stages/5.1.0.py
  Running extracted code from: /Users/nicholasjenkins/Documents/personalvibe/prompts/personalvibe/stages/5.1.0.py
  Traceback (most recent call last):
    File "/Users/nicholasjenkins/Documents/personalvibe/.venv/bin/pv", line 6, in <module>
      sys.exit(app())
               ^^^^^
    File "/Users/nicholasjenkins/Documents/personalvibe/src/personalvibe/cli.py", line 158, in app
      cli_main()
    File "/Users/nicholasjenkins/Documents/personalvibe/src/personalvibe/cli.py", line 152, in cli_main
      ns.func(ns)  # type: ignore[arg-type]
      ^^^^^^^^^^^
    File "/Users/nicholasjenkins/Documents/personalvibe/src/personalvibe/cli.py", line 108, in _cmd_parse_stage
      runpy.run_path(saved, run_name="__main__")
    File "<frozen runpy>", line 286, in run_path
    File "<frozen runpy>", line 98, in _run_module_code
    File "<frozen runpy>", line 88, in _run_code
    File "/Users/nicholasjenkins/Documents/personalvibe/prompts/personalvibe/stages/5.1.0.py", line 59, in <module>
      patch_file(REPO / ".flake8", _fix_flake8)
    File "/Users/nicholasjenkins/Documents/personalvibe/prompts/personalvibe/stages/5.1.0.py", line 36, in patch_file
      txt = path.read_text(encoding="utf-8")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/pathlib.py", line 1027, in read_text
      with self.open(mode='r', encoding=encoding, errors=errors) as f:
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/pathlib.py", line 1013, in open
      return io.open(self, mode, buffering, encoding, errors, newline)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  FileNotFoundError: [Errno 2] No such file or directory: '/Users/nicholasjenkins/Documents/.flake8'
  (personalvibe-py3.12) bash-3.2$ pwd
  /Users/nicholasjenkins/Documents/personalvibe
  (personalvibe-py3.12) bash-3.2$

  (personalvibe-py3.12) bash-3.2$ pytest -q

  ===================================================================================== ERRORS ======================================================================================
  _________________________________________________________________ ERROR collecting tests/test_cli_run_delegate.py _________________________________________________________________
  .venv/lib/python3.12/site-packages/_pytest/python.py:617: in _importtestmodule
      mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
  .venv/lib/python3.12/site-packages/_pytest/pathlib.py:567: in import_path
      importlib.import_module(module_name)
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module
      return _bootstrap._gcd_import(name[level:], package, level)
  <frozen importlib._bootstrap>:1387: in _gcd_import
      ???
  <frozen importlib._bootstrap>:1360: in _find_and_load
      ???
  <frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
      ???
  <frozen importlib._bootstrap>:935: in _load_unlocked
      ???
  .venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module
      source_stat, co = _rewrite_test(fn, self.config)
  .venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:359: in _rewrite_test
      tree = ast.parse(source, filename=strfn)
  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse
      return compile(source, filename, mode, flags,
  E     File "/Users/nicholasjenkins/Documents/personalvibe/tests/test_cli_run_delegate.py", line 5
  E       from __future__ import annotations
  E   IndentationError: unexpected indent
  ================================================================================ warnings summary =================================================================================
  .venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:291
    /Users/nicholasjenkins/Documents/personalvibe/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
      warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

  -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
  ============================================================================= short test summary info =============================================================================
  ERROR tests/test_cli_run_delegate.py
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  1 warning, 1 error in 0.68s
  (personalvibe-py3.12) bash-3.2$ pytest -q
  .FF..................F..                                                                                                                                                    [100%]
  ==================================================================================== FAILURES =====================================================================================
  ___________________________________________________________________________ test_run_delegates_to_mode ____________________________________________________________________________

  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10e974bf0>
  tmp_path = PosixPath('/private/var/folders/tp/5smflv0964j4q9b8fdxnf_3h0000gn/T/pytest-of-nicholasjenkins/pytest-22/test_run_delegates_to_mode0')

      def test_run_delegates_to_mode(monkeypatch, tmp_path):
          called = types.SimpleNamespace(args=None)

          def _fake_main():
              called.args = cli.sys.argv[1:]  # skip prog name

  >       monkeypatch.patch.object(cli.run_pipeline, "main", _fake_main)
  E       AttributeError: 'MonkeyPatch' object has no attribute 'patch'

  tests/test_cli_run_delegate.py:32: AttributeError
  __________________________________________________________________________ test_run_raw_argv_passthrough __________________________________________________________________________

  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10e975910>
  tmp_path = PosixPath('/private/var/folders/tp/5smflv0964j4q9b8fdxnf_3h0000gn/T/pytest-of-nicholasjenkins/pytest-22/test_run_raw_argv_passthrough0')

      def test_run_raw_argv_passthrough(monkeypatch, tmp_path):
          captured = {}

          def _fake_main():
              captured["argv"] = cli.sys.argv[1:]

  >       monkeypatch.patch.object(cli.run_pipeline, "main", _fake_main)
  E       AttributeError: 'MonkeyPatch' object has no attribute 'patch'

  tests/test_cli_run_delegate.py:49: AttributeError
  ___________________________________________________________________________ test_vibed_creates_base_log ___________________________________________________________________________

  tmp_path = PosixPath('/private/var/folders/tp/5smflv0964j4q9b8fdxnf_3h0000gn/T/pytest-of-nicholasjenkins/pytest-22/test_vibed_creates_base_log0')

      @pytest.mark.advanced
      def test_vibed_creates_base_log(tmp_path):
          log_path = Path("logs") / "0.0.2_base.log"
          # Start clean
          if log_path.exists():
              log_path.unlink()

          # Record current branch to restore later
          current_branch = subprocess.check_output(["git", "rev-parse", "--abbrev-ref", "HEAD"], text=True).strip()

          try:
  >           subprocess.run(
                  ["nox", "-s", "vibed", "--", "0.0.2", "tests/dummy_patch.py"],
                  check=True,
                  text=True,
              )

  tests/test_vibed_session.py:31:
  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

  input = None, capture_output = False, timeout = None, check = True, popenargs = (['nox', '-s', 'vibed', '--', '0.0.2', 'tests/dummy_patch.py'],), kwargs = {'text': True}
  process = <Popen: returncode: 1 args: ['nox', '-s', 'vibed', '--', '0.0.2', 'tests/dum...>, stdout = None, stderr = None, retcode = 1

      def run(*popenargs,
              input=None, capture_output=False, timeout=None, check=False, **kwargs):
          """Run command with arguments and return a CompletedProcess instance.

          The returned instance will have attributes args, returncode, stdout and
          stderr. By default, stdout and stderr are not captured, and those attributes
          will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,
          or pass capture_output=True to capture both.

          If check is True and the exit code was non-zero, it raises a
          CalledProcessError. The CalledProcessError object will have the return code
          in the returncode attribute, and output & stderr attributes if those streams
          were captured.

          If timeout is given, and the process takes too long, a TimeoutExpired
          exception will be raised.

          There is an optional argument "input", allowing you to
          pass bytes or a string to the subprocess's stdin.  If you use this argument
          you may not also use the Popen constructor's "stdin" argument, as
          it will be used internally.

          By default, all communication is in bytes, and therefore any "input" should
          be bytes, and the stdout and stderr will be bytes. If in text mode, any
          "input" should be a string, and stdout and stderr will be strings decoded
          according to locale encoding, or by "encoding" if set. Text mode is
          triggered by setting any of text, encoding, errors or universal_newlines.

          The other arguments are the same as for the Popen constructor.
          """
          if input is not None:
              if kwargs.get('stdin') is not None:
                  raise ValueError('stdin and input arguments may not both be used.')
              kwargs['stdin'] = PIPE

          if capture_output:
              if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                  raise ValueError('stdout and stderr arguments may not be used '
                                   'with capture_output.')
              kwargs['stdout'] = PIPE
              kwargs['stderr'] = PIPE

          with Popen(*popenargs, **kwargs) as process:
              try:
                  stdout, stderr = process.communicate(input, timeout=timeout)
              except TimeoutExpired as exc:
                  process.kill()
                  if _mswindows:
                      # Windows accumulates the output in a single blocking
                      # read() call run on child threads, with the timeout
                      # being done in a join() on those threads.  communicate()
                      # _after_ kill() is required to collect that and add it
                      # to the exception.
                      exc.stdout, exc.stderr = process.communicate()
                  else:
                      # POSIX _communicate already populated the output so
                      # far into the TimeoutExpired exception.
                      process.wait()
                  raise
              except:  # Including KeyboardInterrupt, communicate handled that.
                  process.kill()
                  # We don't call process.wait() as .__exit__ does that for us.
                  raise
              retcode = process.poll()
              if check and retcode:
  >               raise CalledProcessError(retcode, process.args,
                                           output=stdout, stderr=stderr)
  E               subprocess.CalledProcessError: Command '['nox', '-s', 'vibed', '--', '0.0.2', 'tests/dummy_patch.py']' returned non-zero exit status 1.

  /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/subprocess.py:571: CalledProcessError
  ------------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------------

  ===========================
  Creating branch vibed/0.0.2
  ===========================

  nox > git checkout -B __temp_vibed_branch__
  Switched to a new branch '__temp_vibed_branch__'
  M README.md
  M src/personalvibe/data/milestone.md
  M src/personalvibe/data/sprint.md
  M src/personalvibe/vibe_utils.py
  nox > git branch -D vibed/0.0.2
  error: branch 'vibed/0.0.2' not found.
  nox > git checkout -b vibed/0.0.2
  Switched to a new branch 'vibed/0.0.2'
  nox > git branch -D __temp_vibed_branch__
  Deleted branch __temp_vibed_branch__ (was c48f571).

  ==========================================
  Running patch script: tests/dummy_patch.py
  ==========================================

  nox > poetry run python tests/dummy_patch.py
  /Library/Frameworks/Python.framework/Versions/3.12/Resources/Python.app/Contents/MacOS/Python: can't open file '/Users/nicholasjenkins/Documents/personalvibe/tests/dummy_patch.py': [Errno 2] No such file or directory
  nox > Command poetry run python tests/dummy_patch.py failed with exit code 2
  M README.md
  M src/personalvibe/data/milestone.md
  M src/personalvibe/data/sprint.md
  M src/personalvibe/vibe_utils.py
  Your branch is up to date with 'origin/master'.
  Deleted branch vibed/0.0.2 (was c48f571).
  ------------------------------------------------------------------------------ Captured stderr call -------------------------------------------------------------------------------
  nox > Running session vibed-3.12
  nox > Re-using existing virtual environment at .nox/vibed-3-12.
  nox > Session vibed-3.12 failed.
  Switched to branch 'master'
  ================================================================================ warnings summary =================================================================================
  .venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:291
    /Users/nicholasjenkins/Documents/personalvibe/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:291: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.9/migration/
      warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

  tests/test_logger.py::test_logfile_created_and_stamp
  tests/test_logger.py::test_logfile_created_and_stamp
  tests/test_logging.py::test_logfile_created
    /Users/nicholasjenkins/Documents/personalvibe/src/personalvibe/logger.py:88: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
      ts = datetime.utcnow().isoformat(timespec="seconds")

  tests/test_run_context.py::test_run_context_format
    <string>:3: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

  -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
  ============================================================================= short test summary info =============================================================================
  FAILED tests/test_cli_run_delegate.py::test_run_delegates_to_mode - AttributeError: 'MonkeyPatch' object has no attribute 'patch'
  FAILED tests/test_cli_run_delegate.py::test_run_raw_argv_passthrough - AttributeError: 'MonkeyPatch' object has no attribute 'patch'
  FAILED tests/test_vibed_session.py::test_vibed_creates_base_log - subprocess.CalledProcessError: Command '['nox', '-s', 'vibed', '--', '0.0.2', 'tests/dummy_patch.py']' returned non-zero exit status 1.
  3 failed, 21 passed, 5 warnings in 5.68s

code_context_paths:
  - "prompts/personalvibe/context/codefiles.txt"
